// -*- C++ -*-


#ifdef DEFINE_BLITZ_ARRAY_SLICE_ITERATOR_MACROS

#define TTD_CONDITIONAL_CONST_CARRAY(RANK,CONST) typename tmptools::ConditionalAddConst<TTD_CARRAY(RANK),(CONST)>::type

#define MPL_SIZE(V) (boost::mpl::size<V>::value)

#define TTD_RES_CARRAY(V) TTD_CARRAY(MPL_SIZE(V))

#define TTD_CONDITIONAL_CONST_RES_CARRAY(V,CONST) typename tmptools::ConditionalAddConst<TTD_RES_CARRAY(V),(CONST)>::type

#define TTD_VEC_IDXTINY(RANK,V) TTD_IDXTINY(RANK-MPL_SIZE(V))
// note that Array::lbound and ubound return a TinyVector<int,...>, so that here we have to use int as well.

#define TTD_FORWARD_ITERATOR_HELPER boost::forward_iterator_helper<Iterator<RANK,V,CONST>,TTD_CONDITIONAL_CONST_RES_CARRAY(V,CONST)>

#undef DEFINE_BLITZ_ARRAY_SLICE_ITERATOR_MACROS
#endif // DEFINE_BLITZ_ARRAY_SLICE_ITERATOR_MACROS


#ifdef UNDEF_BLITZ_ARRAY_SLICE_ITERATOR_MACROS

#undef TTD_FORWARD_ITERATOR_HELPER

#undef TTD_VEC_IDXTINY
#undef TTD_CONDITIONAL_CONST_RES_CARRAY
#undef TTD_RES_CARRAY
#undef MPL_SIZE
#undef TTD_CONDITIONAL_CONST_CARRAY

#undef UNDEF_BLITZ_ARRAY_SLICE_ITERATOR_MACROS
#endif // UNDEF_BLITZ_ARRAY_SLICE_ITERATOR_MACROS