// -*- C++ -*-

#include "Composite.tcc"
#include "Act.h"
#include "QuantumSystem.h"

#include <boost/python.hpp>
#include <boost/shared_ptr.hpp>

using namespace boost::python;
using composite::result_of::Make;

namespace pythonext {{

typedef Make<{actlist} >::type ThisComposite;
static const int RANK=composite::MaxRank<ThisComposite::Acts>::type::value+1;

boost::shared_ptr<const ThisComposite> (*ptrToMake)({const_act_arguments}) = &composite::makeNew;

BOOST_PYTHON_MODULE({modulename})
{{
  class_<ThisComposite,bases<structure::QuantumSystem<RANK> >, boost::shared_ptr<ThisComposite> >("{classname}",no_init);
  def("compositeMake",  ptrToMake,
    {custodian_and_wards}
  );
  register_ptr_to_python<boost::shared_ptr<ThisComposite const> >();
}}

}} // pythonext